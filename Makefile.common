# -*- Makefile -*-

include $(LEVEL)/Makefile.config

# Include LLVM's Master Makefile config and rules.
include $(LLVM_OBJ_ROOT)/Makefile.config

ifeq ($(BYTECODE_LIBRARY), 1)
#
# Override make variables based on the runtime configuration. We want
# to override whatever the user may have said on the command line,
# hence the use of override.
#

override ENABLE_OPTIMIZED := $(RUNTIME_ENABLE_OPTIMIZED)
override DISABLE_ASSERTIONS := $(RUNTIME_DISABLE_ASSERTIONS)
override ENABLE_PROFILING := $(RUNTIME_ENABLE_PROFILING)
override ENABLE_COVERAGE := $(RUNTIME_ENABLE_COVERAGE)
override DEBUG_SYMBOLS := $(RUNTIME_DEBUG_SYMBOLS)
endif

include $(PROJ_SRC_ROOT)/Makefile.rules

# LLVMCC was added in 2.7.
ifeq ($(LLVMCC),)
LLVMCC := $(LLVMGCC)
LLVMCXX := $(LLVMGXX)
endif

# Needed to build runtime library using clang (gnu89 is the gcc default)
C.Flags += -std=gnu89

CL.Flags += -D__OPENCL_VERSION__=110
LD.Flags += -L$(STP_ROOT)/lib
CXX.Flags += -I$(STP_ROOT)/include
CXX.Flags += -DKLEE_SRC_DIR=\"$(PROJ_SRC_ROOT)\" -DKLEE_DIR=\"$(PROJ_OBJ_ROOT)\" -DKLEE_LIB_DIR=\"$(PROJ_libdir)\"
CXX.Flags += -DLLVM_PREFIX=\"$(LLVM_OBJ_ROOT)/$(LLVM_BUILD_MODE)\"

# For STP.
CXX.Flags += -DEXT_HASH_MAP

# For clang
ifeq ($(ENABLE_OPENCL),1)
  CXX.Flags += -I$(LLVM_SRC_ROOT)/tools/clang/include -I$(LLVM_OBJ_ROOT)/tools/clang/include 
endif
